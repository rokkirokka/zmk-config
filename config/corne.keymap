/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    macros {
        transformPS: transformPS {
            compatible = "zmk,behavior-macro";
            label = "PS_transform";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp T>,
                <&macro_release>,
                <&kp LCTRL>;
        };
        horzFlip: horzFlip {
            compatible = "zmk,behavior-macro";
            label = "PS_horzFlip";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp LCTRL>;
        };
        canvasSize: canvasSize {
            compatible = "zmk,behavior-macro";
            label = "PS_canvasSize";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LALT &kp LCTRL>;
        };
        imageSize: imageSize {
            compatible = "zmk,behavior-macro";
            label = "PS_imageSize";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp I>,
                <&macro_release>,
                <&kp LCTRL &kp LALT>;
        };
        smartObject: smartObject {
            compatible = "zmk,behavior-macro";
            label = "PS_smartObject";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT &kp LCTRL>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_CONTROL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
   &kp ESC   &kp Q   &kp W     &kp E   &kp R      &kp T    &kp Y   &kp U      &kp I    &kp O     &kp P  &kp BSPC
 &kp LSHFT   &kp A   &kp S     &kp D   &kp F      &kp G    &kp H   &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
 &kp LCTRL   &kp Z   &kp X     &kp C   &kp V      &kp B    &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                            &kp LALT   &mo 1  &kp SPACE  &kp RET   &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
    &kp TAB        &kp N1        &kp N2             &kp N3            &kp N4             &kp N5    &kp N6    &kp N7    &kp N8     &kp N9  &kp N0  &kp BSPC
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4  &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans    &trans
     &tog 5         &to 3  &out OUT_TOG  &ext_power EP_OFF  &ext_power EP_ON  &ext_power EP_TOG    &trans    &trans    &trans     &trans  &trans    &trans
                                                  &kp LGUI            &trans          &kp SPACE   &kp RET    &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
 &kp LCTRL    &trans  &trans    &trans    &trans     &trans  &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
 &kp LSHFT    &trans  &trans    &trans    &trans     &trans  &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                              &kp LGUI    &trans  &kp SPACE    &kp RET     &trans         &kp RALT
            >;
        };

        Photoshop {
            bindings = <
   &kp ESC   &kp Q         &kp W         &kp E   &kp R  &kp BACKSPACE  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LSHFT   &kp A  &transformPS         &kp D   &kp F          &kp G  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LCTRL   &kp Z         &kp X         &kp C   &kp V          &kp B  &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp LEFT_ALT   &mo 4      &kp SPACE  &trans  &trans  &trans
            >;
        };

        Photoshop02 {
            bindings = <
    &kp N1       &kp N2      &kp N5    &kp N7  &kp N8         &kp N0  &trans  &trans  &trans  &trans  &trans  &trans
    &trans       &trans      &trans    &trans  &trans  &kp BACKSPACE  &trans  &trans  &trans  &trans  &trans  &trans
 &horzFlip  &canvasSize  &imageSize     &kp L   &kp M      &kp ENTER  &trans  &trans  &trans  &trans  &trans  &trans
                                     &kp LGUI  &trans          &to 0  &trans  &trans  &trans
            >;
        };

        ArtStudio {
            bindings = <
        &kp ESC   &kp Q   &kp W         &kp E   &kp R   &kp T  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LEFT_SHIFT   &kp A   &kp S         &kp D   &kp F   &kp G  &trans  &trans  &trans  &trans  &trans  &trans
      &kp LCTRL   &kp Z   &kp X         &kp C   &kp V   &kp B  &trans  &trans  &trans  &trans  &trans  &trans
                                 &kp LEFT_ALT   &mo 6   &mo 7  &trans  &trans  &trans
            >;
        };

        ArtStudio1 {
            bindings = <
    &kp F1   &kp Y   &kp U             &kp I      &kp O          &kp P  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LSHFT   &kp H   &kp J             &kp K      &kp L  &kp BACKSPACE  &trans  &trans  &trans  &trans  &trans  &trans
 &kp SPACE   &kp N   &kp M  &kp GREATER_THAN  &kp UNDER      &kp ENTER  &trans  &trans  &trans  &trans  &trans  &trans
                                   &kp LCTRL     &trans          &mo 0  &trans  &trans  &trans
            >;
        };

        ArtStudio2 {
            bindings = <
 &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_4    &kp NUMBER_6  &kp NUMBER_8     &kp NUMBER_0  &trans  &trans  &trans  &trans  &trans  &trans
       &kp F3        &kp F4          &kp F5    &kp UP_ARROW     &kp SLASH  &kp KP_MULTIPLY  &trans  &trans  &trans  &trans  &trans  &trans
    &kp COMMA       &kp DOT  &kp LEFT_ARROW  &kp DOWN_ARROW     &kp RIGHT     &kp QUESTION  &trans  &trans  &trans  &trans  &trans  &trans
                                                  &kp TILDE      &kp BSLH           &trans  &trans  &trans  &trans
            >;
        };
    };
};
